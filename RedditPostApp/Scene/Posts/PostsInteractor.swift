//
//  PostsInteractor.swift
//  RedditPostApp
//
//  Created by Nisum on 11/17/19.
//  Copyright (c) 2019 Orlando Arzola. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostsBusinessLogic {
    func getPosts()
    func removePost(id: String)
}

protocol PostsDataStore {
}

class PostsInteractor: PostsBusinessLogic, PostsDataStore {
    var presenter: PostsPresentationLogic?
    var worker = PostsWorker()

    var nextPageId = ""
    var isFetchingPosts = false
    var isFirstTimeFetching = true

    func getPosts() {
        if !isFirstTimeFetching {
            if nextPageId.isEmpty {
                return
            }
        }
        guard !isFetchingPosts else {
            return
        }
        isFirstTimeFetching = false
        isFetchingPosts = true
        worker.getPost(nextPageId: nextPageId) { [weak self] result in
            self?.isFetchingPosts = false
            switch result {
            case .success(let response):
                self?.nextPageId = response.nextPageId
                if !response.nextPageId.isEmpty {
                    let response = Posts.RedditPosts.Response(
                        rawPosts: response.posts,
                        showLoadingRow: true
                    )
                    self?.presenter?.presentView(response: response)
                } else {
                    let response = Posts.RedditPosts.Response(
                        rawPosts: response.posts,
                        showLoadingRow: false
                    )
                    self?.presenter?.presentView(response: response)
                }
            case .failure(let error):
                print(error.localizedDescription)
            }
        }
    }

    func removePost(id: String) {
        presenter?.removePost(id: id)
    }
}
