//
//  PostsViewController.swift
//  RedditPostApp
//
//  Created by Nisum on 11/17/19.
//  Copyright (c) 2019 Orlando Arzola. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostsDisplayLogic: class {
    func displayView(viewModel: Posts.RedditPosts.ViewModel)
}

class PostsViewController: UIViewController, PostsDisplayLogic {
    var interactor: PostsBusinessLogic?
    var router: (NSObjectProtocol & PostsRoutingLogic & PostsDataPassing)?

    @IBOutlet weak var postsTableView: UITableView!

    var redditPosts: [Posts.RedditPosts.ViewModel.DisplayedRedditPost] = [] {
        didSet {
            postsTableView.reloadData()
        }
    }

    var loadingCount = 0
    
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = PostsInteractor()
        let presenter = PostsPresenter()
        let router = PostsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupDataTableView()
        let request = Posts.RedditPosts.Request(pageId: "")
        interactor?.getPosts(request: request)
    }

    // MARK: Helper Methods

    private func setupDataTableView() {
        postsTableView.dataSource = self
                postsTableView.prefetchDataSource = self
        postsTableView.tableFooterView = UIView()
        postsTableView.register(UINib(nibName: "RedditPostTableViewCell", bundle: nil), forCellReuseIdentifier: "postCell")
        postsTableView.register(UINib(nibName: "LoadingTableViewCell", bundle: nil), forCellReuseIdentifier: "loadingCell")
        postsTableView.estimatedRowHeight = 60
        postsTableView.rowHeight = UITableView.automaticDimension
    }


    // MARK: VIP methods

    func displayView(viewModel: Posts.RedditPosts.ViewModel) {
        redditPosts = viewModel.redditPosts
    }

}

extension PostsViewController: UITableViewDataSource, UITableViewDataSourcePrefetching {

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return redditPosts.count + loadingCount
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if isLoadingCell(for: indexPath) {
            let cell = tableView.dequeueReusableCell(withIdentifier: "loadingCell", for: indexPath) as! LoadingTableViewCell
            cell.startAnimating()
            return cell
        }

        let post = redditPosts[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "postCell", for: indexPath) as! RedditPostTableViewCell

        cell.setupCell(viewModel: post)
        return cell
    }

    func tableView(_ tableView: UITableView, prefetchRowsAt indexPaths: [IndexPath]) {

    }

    func isLoadingCell(for indexPath: IndexPath) -> Bool {
        return indexPath.row >= redditPosts.count
    }
}
